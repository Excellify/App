name: Stage Pull Request

on:
  pull_request:
    types: [labeled, synchronize, opened]
    branches:
      - dev

env:
  REGISTRY_REPO: seventv/app
  REGISTRTY_IMAGE_NAME: seventv/app/pull-stage:${{ github.sha }}

jobs:
  build:
    name: Build App (Stage)
    runs-on: self-hosted
    if: ${{ contains(github.event.pull_request.labels.*.name, 'staged') }}

    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image with Server-Side Rendering & Push to Packages
        uses: docker/build-push-action@v2.7.0
        with:
          build-args: |
            stage=1
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/seventv/app/pull-stage:${{ github.sha }}

  deploy:
    name: Deploy (Staging Environment)
    runs-on: ubuntu-latest
    needs: # Run this after build
      - build

    steps:
        # Checkout repository
        - uses: actions/checkout@v2

        # Deploy to k8s
        - name: Install kubectl&
          uses: azure/setup-kubectl@v1

        - name: Apply Deployment & Rollout
          env:
            KUBE_CONFIG_DATA: ${{ secrets.K8S_CONFIG }}
            KUBE_RESOURCE: deployments
            KUBE_META_NAME: 7tv-webapp-stage
            KUBE_IMAGE_PATCH: >-
              [
                { "op": "replace", "path": "/spec/template/spec/containers/0/image", "value": "ghcr.io/${{ env.REGISTRTY_IMAGE_NAME }}" }
              ]
          run: |
            mkdir -p ~/.kube
            (echo $KUBE_CONFIG_DATA | base64 -d) >> ~/.kube/config
            kubectl config use-context 7tv-as-deployer

            kubectl apply -f k8s/stage.yaml
            kubectl patch $KUBE_RESOURCE $KUBE_META_NAME --type="json" -p="$KUBE_IMAGE_PATCH"

            kubectl rollout restart -n 7tv $KUBE_RESOURCE/$KUBE_META_NAME
